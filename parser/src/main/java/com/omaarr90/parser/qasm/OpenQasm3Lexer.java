// Generated from OpenQasm3.g4 by ANTLR 4.13.1
package com.omaarr90.parser.qasm;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class OpenQasm3Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, IDENTIFIER=16, 
		INT=17, REAL=18, PI=19, WS=20, LINE_COMMENT=21, BLOCK_COMMENT=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "IDENTIFIER", "INT", 
			"REAL", "PI", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'OPENQASM'", "';'", "'qubit'", "'['", "']'", "'('", "')'", "','", 
			"'measure'", "'->'", "'barrier'", "'*'", "'/'", "'+'", "'-'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, "IDENTIFIER", "INT", "REAL", "PI", "WS", "LINE_COMMENT", 
			"BLOCK_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OpenQasm3Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "OpenQasm3.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00ad\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000f\u0001\u000f\u0005\u000ff\b\u000f\n\u000f\f\u000fi\t\u000f"+
		"\u0001\u0010\u0004\u0010l\b\u0010\u000b\u0010\f\u0010m\u0001\u0011\u0004"+
		"\u0011q\b\u0011\u000b\u0011\f\u0011r\u0001\u0011\u0001\u0011\u0005\u0011"+
		"w\b\u0011\n\u0011\f\u0011z\t\u0011\u0001\u0011\u0001\u0011\u0004\u0011"+
		"~\b\u0011\u000b\u0011\f\u0011\u007f\u0001\u0011\u0004\u0011\u0083\b\u0011"+
		"\u000b\u0011\f\u0011\u0084\u0003\u0011\u0087\b\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0003\u0012\u008c\b\u0012\u0001\u0013\u0004\u0013\u008f"+
		"\b\u0013\u000b\u0013\f\u0013\u0090\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0005\u0014\u0099\b\u0014\n\u0014"+
		"\f\u0014\u009c\t\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0005\u0015\u00a4\b\u0015\n\u0015\f\u0015\u00a7"+
		"\t\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u00a5\u0000\u0016\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016\u0001\u0000\u0005\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001"+
		"\u000009\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u00b8\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0001-\u0001\u0000\u0000\u0000\u00036\u0001\u0000\u0000\u0000"+
		"\u00058\u0001\u0000\u0000\u0000\u0007>\u0001\u0000\u0000\u0000\t@\u0001"+
		"\u0000\u0000\u0000\u000bB\u0001\u0000\u0000\u0000\rD\u0001\u0000\u0000"+
		"\u0000\u000fF\u0001\u0000\u0000\u0000\u0011H\u0001\u0000\u0000\u0000\u0013"+
		"P\u0001\u0000\u0000\u0000\u0015S\u0001\u0000\u0000\u0000\u0017[\u0001"+
		"\u0000\u0000\u0000\u0019]\u0001\u0000\u0000\u0000\u001b_\u0001\u0000\u0000"+
		"\u0000\u001da\u0001\u0000\u0000\u0000\u001fc\u0001\u0000\u0000\u0000!"+
		"k\u0001\u0000\u0000\u0000#\u0086\u0001\u0000\u0000\u0000%\u008b\u0001"+
		"\u0000\u0000\u0000\'\u008e\u0001\u0000\u0000\u0000)\u0094\u0001\u0000"+
		"\u0000\u0000+\u009f\u0001\u0000\u0000\u0000-.\u0005O\u0000\u0000./\u0005"+
		"P\u0000\u0000/0\u0005E\u0000\u000001\u0005N\u0000\u000012\u0005Q\u0000"+
		"\u000023\u0005A\u0000\u000034\u0005S\u0000\u000045\u0005M\u0000\u0000"+
		"5\u0002\u0001\u0000\u0000\u000067\u0005;\u0000\u00007\u0004\u0001\u0000"+
		"\u0000\u000089\u0005q\u0000\u00009:\u0005u\u0000\u0000:;\u0005b\u0000"+
		"\u0000;<\u0005i\u0000\u0000<=\u0005t\u0000\u0000=\u0006\u0001\u0000\u0000"+
		"\u0000>?\u0005[\u0000\u0000?\b\u0001\u0000\u0000\u0000@A\u0005]\u0000"+
		"\u0000A\n\u0001\u0000\u0000\u0000BC\u0005(\u0000\u0000C\f\u0001\u0000"+
		"\u0000\u0000DE\u0005)\u0000\u0000E\u000e\u0001\u0000\u0000\u0000FG\u0005"+
		",\u0000\u0000G\u0010\u0001\u0000\u0000\u0000HI\u0005m\u0000\u0000IJ\u0005"+
		"e\u0000\u0000JK\u0005a\u0000\u0000KL\u0005s\u0000\u0000LM\u0005u\u0000"+
		"\u0000MN\u0005r\u0000\u0000NO\u0005e\u0000\u0000O\u0012\u0001\u0000\u0000"+
		"\u0000PQ\u0005-\u0000\u0000QR\u0005>\u0000\u0000R\u0014\u0001\u0000\u0000"+
		"\u0000ST\u0005b\u0000\u0000TU\u0005a\u0000\u0000UV\u0005r\u0000\u0000"+
		"VW\u0005r\u0000\u0000WX\u0005i\u0000\u0000XY\u0005e\u0000\u0000YZ\u0005"+
		"r\u0000\u0000Z\u0016\u0001\u0000\u0000\u0000[\\\u0005*\u0000\u0000\\\u0018"+
		"\u0001\u0000\u0000\u0000]^\u0005/\u0000\u0000^\u001a\u0001\u0000\u0000"+
		"\u0000_`\u0005+\u0000\u0000`\u001c\u0001\u0000\u0000\u0000ab\u0005-\u0000"+
		"\u0000b\u001e\u0001\u0000\u0000\u0000cg\u0007\u0000\u0000\u0000df\u0007"+
		"\u0001\u0000\u0000ed\u0001\u0000\u0000\u0000fi\u0001\u0000\u0000\u0000"+
		"ge\u0001\u0000\u0000\u0000gh\u0001\u0000\u0000\u0000h \u0001\u0000\u0000"+
		"\u0000ig\u0001\u0000\u0000\u0000jl\u0007\u0002\u0000\u0000kj\u0001\u0000"+
		"\u0000\u0000lm\u0001\u0000\u0000\u0000mk\u0001\u0000\u0000\u0000mn\u0001"+
		"\u0000\u0000\u0000n\"\u0001\u0000\u0000\u0000oq\u0007\u0002\u0000\u0000"+
		"po\u0001\u0000\u0000\u0000qr\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000"+
		"\u0000rs\u0001\u0000\u0000\u0000st\u0001\u0000\u0000\u0000tx\u0005.\u0000"+
		"\u0000uw\u0007\u0002\u0000\u0000vu\u0001\u0000\u0000\u0000wz\u0001\u0000"+
		"\u0000\u0000xv\u0001\u0000\u0000\u0000xy\u0001\u0000\u0000\u0000y\u0087"+
		"\u0001\u0000\u0000\u0000zx\u0001\u0000\u0000\u0000{}\u0005.\u0000\u0000"+
		"|~\u0007\u0002\u0000\u0000}|\u0001\u0000\u0000\u0000~\u007f\u0001\u0000"+
		"\u0000\u0000\u007f}\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000"+
		"\u0000\u0080\u0087\u0001\u0000\u0000\u0000\u0081\u0083\u0007\u0002\u0000"+
		"\u0000\u0082\u0081\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000\u0000"+
		"\u0000\u0084\u0082\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000\u0000"+
		"\u0000\u0085\u0087\u0001\u0000\u0000\u0000\u0086p\u0001\u0000\u0000\u0000"+
		"\u0086{\u0001\u0000\u0000\u0000\u0086\u0082\u0001\u0000\u0000\u0000\u0087"+
		"$\u0001\u0000\u0000\u0000\u0088\u008c\u0005\u03c0\u0000\u0000\u0089\u008a"+
		"\u0005p\u0000\u0000\u008a\u008c\u0005i\u0000\u0000\u008b\u0088\u0001\u0000"+
		"\u0000\u0000\u008b\u0089\u0001\u0000\u0000\u0000\u008c&\u0001\u0000\u0000"+
		"\u0000\u008d\u008f\u0007\u0003\u0000\u0000\u008e\u008d\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0001\u0000\u0000\u0000\u0090\u008e\u0001\u0000\u0000"+
		"\u0000\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u0092\u0001\u0000\u0000"+
		"\u0000\u0092\u0093\u0006\u0013\u0000\u0000\u0093(\u0001\u0000\u0000\u0000"+
		"\u0094\u0095\u0005/\u0000\u0000\u0095\u0096\u0005/\u0000\u0000\u0096\u009a"+
		"\u0001\u0000\u0000\u0000\u0097\u0099\b\u0004\u0000\u0000\u0098\u0097\u0001"+
		"\u0000\u0000\u0000\u0099\u009c\u0001\u0000\u0000\u0000\u009a\u0098\u0001"+
		"\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b\u009d\u0001"+
		"\u0000\u0000\u0000\u009c\u009a\u0001\u0000\u0000\u0000\u009d\u009e\u0006"+
		"\u0014\u0000\u0000\u009e*\u0001\u0000\u0000\u0000\u009f\u00a0\u0005/\u0000"+
		"\u0000\u00a0\u00a1\u0005*\u0000\u0000\u00a1\u00a5\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a4\t\u0000\u0000\u0000\u00a3\u00a2\u0001\u0000\u0000\u0000\u00a4"+
		"\u00a7\u0001\u0000\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a3\u0001\u0000\u0000\u0000\u00a6\u00a8\u0001\u0000\u0000\u0000\u00a7"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005*\u0000\u0000\u00a9\u00aa"+
		"\u0005/\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000\u00ab\u00ac\u0006"+
		"\u0015\u0000\u0000\u00ac,\u0001\u0000\u0000\u0000\f\u0000gmrx\u007f\u0084"+
		"\u0086\u008b\u0090\u009a\u00a5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}